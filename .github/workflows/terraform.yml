name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  vpc:
    runs-on: [terraform] # self-hosted runner with terraform label
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            vpc:
              - 'vpc/**'

      - name: Terraform Init
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform destroy
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform destroy -input=false -var-file=terraform.tfvars -auto-approve

  sg:
    runs-on: [terraform]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            sg:
              - 'sg/**'

      - name: Terraform Init
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform destroy
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform destroy -input=false -var-file=terraform.tfvars -auto-approve

  ec2:
    runs-on: [terraform]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ec2:
              - 'ec2/**'

      - name: Terraform Init
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform destroy
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform destroy -input=false -var-file=terraform.tfvars -auto-approve

  route53:
    runs-on: [terraform]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            route53:
              - 'route53/**'

      - name: Terraform Init
        if: ${{ steps.changes.outputs.route53 == 'true' }}
        working-directory: ./route53
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.route53 == 'true' }}
        working-directory: ./route53
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.route53 == 'true' }}
        working-directory: ./route53
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.route53 == 'true' }}
        working-directory: ./route53
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform destroy
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.route53 == 'true' }}
        working-directory: ./route53
        run: terraform destroy -input=false -var-file=terraform.tfvars -auto-approve